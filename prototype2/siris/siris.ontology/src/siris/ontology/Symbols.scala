package siris.ontology

import siris.core.entity.description.Semantics
import siris.ontology.types.OntologySymbol

object Symbols{
  private implicit def symToSem( s : Symbol ) =  new Semantics {
    def toSymbol = s
  }

  val acceleration = OntologySymbol(Symbol("acceleration"))
  val accelerationFactor = OntologySymbol(Symbol("accelerationFactor"))
  val ai = OntologySymbol(Symbol("ai"))
  val alignment = OntologySymbol(Symbol("alignment"))
  val analogInput = OntologySymbol(Symbol("analogInput"))
  val angularDamping = OntologySymbol(Symbol("angularDamping"))
  val angularFactor = OntologySymbol(Symbol("angularFactor"))
  val animationObject = OntologySymbol(Symbol("animationObject"))
  val anyList = OntologySymbol(Symbol("anyList"))
  val application = OntologySymbol(Symbol("application"))
  val attenuation = OntologySymbol(Symbol("attenuation"))
  val attractorAttractionFactor = OntologySymbol(Symbol("attractorAttractionFactor"))
  val attractorStrength = OntologySymbol(Symbol("attractorStrength"))

  val backTexture = OntologySymbol(Symbol("backTexture"))
  val barrel = OntologySymbol(Symbol("barrel"))
  val begin = OntologySymbol(Symbol("begin"))
  val bloomEffect = OntologySymbol(Symbol("bloomEffect"))
  val boolean = OntologySymbol(Symbol("boolean"))
  val boundingBox = OntologySymbol(Symbol("boundingBox"))
  val box = OntologySymbol(Symbol("box"))
  val button = OntologySymbol(Symbol("button"))
  val button_Center = OntologySymbol(Symbol("button_Center"))
  val button_Left = OntologySymbol(Symbol("button_Left"))
  val button_Right = OntologySymbol(Symbol("button_Right"))


  val collisionGroup = OntologySymbol(Symbol("collisionGroup"))
  val collidesWith = OntologySymbol(Symbol("collidesWith"))
  val capsule = OntologySymbol(Symbol("capsule"))
  val castShadow = OntologySymbol(Symbol("castShadow"))
  val clipping = OntologySymbol(Symbol("clipping"))
  val collada = OntologySymbol(Symbol("collada"))
  val colladaFile = OntologySymbol(Symbol("colladaFile"))
  val colladaObjectId = OntologySymbol(Symbol("colladaObjectId"))
  val collision = OntologySymbol(Symbol("collision"))
  val collisionSound = OntologySymbol(Symbol("collisionSound"))
  val color = OntologySymbol(Symbol("color"))
  val componentType = OntologySymbol(Symbol("componentType"))
  val configuration = OntologySymbol(Symbol("configuration"))
  val constantAttenuation = OntologySymbol(Symbol("constantAttenuation"))
  val container = OntologySymbol(Symbol("container"))
  val cylinder = OntologySymbol(Symbol("cylinder"))

  val depthOfFieldEffect = OntologySymbol(Symbol("depthOfFieldEffect"))
  val diffuseColor = OntologySymbol(Symbol("diffuseColor"))
  val direction = OntologySymbol(Symbol("direction"))
  val downTexture = OntologySymbol(Symbol("downTexture"))
  val drawLines = OntologySymbol(Symbol("drawLines"))

  val edge = OntologySymbol(Symbol("edge"))
  val editor = OntologySymbol(Symbol("editor"))
  val end = OntologySymbol(Symbol("end"))
  val entity = OntologySymbol(Symbol("entity"))
  val enumeration = OntologySymbol(Symbol("enumeration"))
  val event = OntologySymbol(Symbol("event"))
  val eventDescription = OntologySymbol(Symbol("eventDescription"))
  val existingNode = OntologySymbol(Symbol("existingNode"))

  val factor = OntologySymbol(Symbol("factor"))
  val farClip = OntologySymbol(Symbol("farClip"))
  val file = OntologySymbol(Symbol("file"))
  val fileFormat = OntologySymbol(Symbol("fileFormat"))
  val fireball = OntologySymbol(Symbol("fireball"))
  val fish = OntologySymbol(Symbol("fish"))
  val fish_Ai = OntologySymbol(Symbol("fish_Ai"))
  val fishtank = OntologySymbol(Symbol("fishtank"))
  val fog = OntologySymbol(Symbol("fog"))
  val fragmentShader = OntologySymbol(Symbol("fragmentShader"))
  val frame = OntologySymbol(Symbol("frame"))
  val frontTexture = OntologySymbol(Symbol("frontTexture"))

  val gameLogic = OntologySymbol(Symbol("gameLogic"))
  val gesture = OntologySymbol(Symbol("gesture"))
  val ghost = OntologySymbol(Symbol("ghost"))
  val graph = OntologySymbol(Symbol("graph"))
  val graphics = OntologySymbol(Symbol("graphics"))
  val gravity = OntologySymbol(Symbol("gravity"))

  val halfExtends = OntologySymbol(Symbol("halfExtends"))
  val headTransform = OntologySymbol(Symbol("headTransform"))
  val health = OntologySymbol(Symbol("health"))
  val height = OntologySymbol(Symbol("height"))

  val iRI = OntologySymbol(Symbol("iRI"))
  val iceball = OntologySymbol(Symbol("iceball"))
  val icon1 = OntologySymbol(Symbol("icon1"))
  val icon2 = OntologySymbol(Symbol("icon2"))
  val icon3 = OntologySymbol(Symbol("icon3"))
  val identifier = OntologySymbol(Symbol("identifier"))
  val impulse = OntologySymbol(Symbol("impulse"))
  val initialize = OntologySymbol(Symbol("initialize"))
  val inputDevice = OntologySymbol(Symbol("inputDevice"))
  val integer = OntologySymbol(Symbol("integer"))
  val intensity = OntologySymbol(Symbol("intensity"))
  val interactions = OntologySymbol(Symbol("interactions"))
  val interface = OntologySymbol(Symbol("interface"))
  val interval = OntologySymbol(Symbol("interval"))
  val ip = OntologySymbol(Symbol("ip"))

  val key_Down = OntologySymbol(Symbol("key_Down"))
  val key_Left = OntologySymbol(Symbol("key_Left"))
  val key_Right = OntologySymbol(Symbol("key_Right"))
  val key_Space = OntologySymbol(Symbol("key_Space"))
  val key_Up = OntologySymbol(Symbol("key_Up"))
  val key_a = OntologySymbol(Symbol("key_a"))
  val key_b = OntologySymbol(Symbol("key_b"))
  val key_c = OntologySymbol(Symbol("key_c"))
  val key_d = OntologySymbol(Symbol("key_d"))
  val key_e = OntologySymbol(Symbol("key_e"))
  val key_f = OntologySymbol(Symbol("key_f"))
  val key_g = OntologySymbol(Symbol("key_g"))
  val key_h = OntologySymbol(Symbol("key_h"))
  val key_i = OntologySymbol(Symbol("key_i"))
  val key_j = OntologySymbol(Symbol("key_j"))
  val key_k = OntologySymbol(Symbol("key_k"))
  val key_l = OntologySymbol(Symbol("key_l"))
  val key_m = OntologySymbol(Symbol("key_m"))
  val key_n = OntologySymbol(Symbol("key_n"))
  val key_o = OntologySymbol(Symbol("key_o"))
  val key_p = OntologySymbol(Symbol("key_p"))
  val key_q = OntologySymbol(Symbol("key_q"))
  val key_r = OntologySymbol(Symbol("key_r"))
  val key_s = OntologySymbol(Symbol("key_s"))
  val key_t = OntologySymbol(Symbol("key_t"))
  val key_u = OntologySymbol(Symbol("key_u"))
  val key_v = OntologySymbol(Symbol("key_v"))
  val key_w = OntologySymbol(Symbol("key_w"))
  val key_x = OntologySymbol(Symbol("key_x"))
  val key_y = OntologySymbol(Symbol("key_y"))
  val key_z = OntologySymbol(Symbol("key_z"))
  val keyframe = OntologySymbol(Symbol("keyframe"))

  val leftTexture = OntologySymbol(Symbol("leftTexture"))
  val linearAttenuation = OntologySymbol(Symbol("linearAttenuation"))
  val linearDamping = OntologySymbol(Symbol("linearDamping"))
  val live = OntologySymbol(Symbol("live"))
  val lives = OntologySymbol(Symbol("lives"))
  val local = OntologySymbol(Symbol("local"))
  val long = OntologySymbol(Symbol("long"))

  val mana = OntologySymbol(Symbol("mana"))
  val manipulatorList = OntologySymbol(Symbol("manipulatorList"))
  val mass = OntologySymbol(Symbol("mass"))
  val material = OntologySymbol(Symbol("material"))
  val matrix = OntologySymbol(Symbol("matrix"))
  val maxAccMag = OntologySymbol(Symbol("maxAccMag"))
  val maxAttractors = OntologySymbol(Symbol("maxAttractors"))
  val maxNeighbors = OntologySymbol(Symbol("maxNeighbors"))
  val mesh = OntologySymbol(Symbol("mesh"))
  val minAttractorDistance = OntologySymbol(Symbol("minAttractorDistance"))
  val minDistanceToNeighbors = OntologySymbol(Symbol("minDistanceToNeighbors"))
  val minDistanceToPredators = OntologySymbol(Symbol("minDistanceToPredators"))
  val mirror = OntologySymbol(Symbol("mirror"))

  val name = OntologySymbol(Symbol("name"))
  val namedContainer = OntologySymbol(Symbol("namedContainer"))
  val nearClip = OntologySymbol(Symbol("nearClip"))
  val neighbor = OntologySymbol(Symbol("neighbor"))
  val neighborhoodAttractionFactor = OntologySymbol(Symbol("neighborhoodAttractionFactor"))
  val netProduce = OntologySymbol(Symbol("netProduce"))
  val network = OntologySymbol(Symbol("network"))
  val normal = OntologySymbol(Symbol("normal"))
  val nullType = OntologySymbol(Symbol("nullType"))
  val number = OntologySymbol(Symbol("number"))

  val orientation = OntologySymbol(Symbol("orientation"))
  val origin = OntologySymbol(Symbol("origin"))

  val parentElement = OntologySymbol(Symbol("parentElement"))
  val particle = OntologySymbol(Symbol("particle"))
  val physics = OntologySymbol(Symbol("physics"))
  val plane = OntologySymbol(Symbol("plane"))
  val pointLight = OntologySymbol(Symbol("pointLight"))
  val port = OntologySymbol(Symbol("port"))
  val position = OntologySymbol(Symbol("position"))
  val position2D = OntologySymbol(Symbol("position2D"))
  val postProcessingEffect = OntologySymbol(Symbol("postProcessingEffect"))
  val probability = OntologySymbol(Symbol("probability"))

  val quadraticAttenuation = OntologySymbol(Symbol("quadraticAttenuation"))

  val radius = OntologySymbol(Symbol("radius"))
  val real = OntologySymbol(Symbol("real"))
  val redering_FileFormats = OntologySymbol(Symbol("redering_FileFormats"))
  val refreshRate = OntologySymbol(Symbol("refreshRate"))
  val remote = OntologySymbol(Symbol("remote"))
  val restitution = OntologySymbol(Symbol("restitution"))
  val rightTexture = OntologySymbol(Symbol("rightTexture"))
  val root = OntologySymbol(Symbol("root"))

  val saturation = OntologySymbol(Symbol("saturation"))
  val saturationEffect = OntologySymbol(Symbol("saturationEffect"))
  val scale = OntologySymbol(Symbol("scale"))
  val screenCoordinates = OntologySymbol(Symbol("screenCoordinates"))
  val shader = OntologySymbol(Symbol("shader"))
  val shadowBias = OntologySymbol(Symbol("shadowBias"))
  val shapeFromFile = OntologySymbol(Symbol("shapeFromFile"))
  val shapes = OntologySymbol(Symbol("shapes"))
  val shield = OntologySymbol(Symbol("shield"))
  val showHeightMap = OntologySymbol(Symbol("showHeightMap"))
  val simulationSpeed = OntologySymbol(Symbol("simulationSpeed"))
  val siris_Animation = OntologySymbol(Symbol("siris_Animation"))
  val siris_Buttons = OntologySymbol(Symbol("siris_Buttons"))
  val siris_Concept = OntologySymbol(Symbol("siris_Concept"))
  val siris_Core = OntologySymbol(Symbol("siris_Core"))
  val siris_Geometry = OntologySymbol(Symbol("siris_Geometry"))
  val siris_Gestures = OntologySymbol(Symbol("siris_Gestures"))
  val siris_IO = OntologySymbol(Symbol("siris_IO"))
  val siris_Keyboard = OntologySymbol(Symbol("siris_Keyboard"))
  val siris_LinearAlgebra = OntologySymbol(Symbol("siris_LinearAlgebra"))
  val siris_Math = OntologySymbol(Symbol("siris_Math"))
  val siris_Misc = OntologySymbol(Symbol("siris_Misc"))
  val siris_Network = OntologySymbol(Symbol("siris_Network"))
  val siris_Physics = OntologySymbol(Symbol("siris_Physics"))
  val siris_Rendering = OntologySymbol(Symbol("siris_Rendering"))
  val siris_SimulationObjects = OntologySymbol(Symbol("siris_SimulationObjects"))
  val siris_Sound = OntologySymbol(Symbol("siris_Sound"))
  val siris_Tracking = OntologySymbol(Symbol("siris_Tracking"))
  val siris_World = OntologySymbol(Symbol("siris_World"))
  val size = OntologySymbol(Symbol("size"))
  val skyBox = OntologySymbol(Symbol("skyBox"))
  val skyBoxFog = OntologySymbol(Symbol("skyBoxFog"))
  val sound = OntologySymbol(Symbol("sound"))
  val soundType = OntologySymbol(Symbol("soundType"))
  val specularColor = OntologySymbol(Symbol("specularColor"))
  val spell = OntologySymbol(Symbol("spell"))
  val sphere = OntologySymbol(Symbol("sphere"))
  val spotCutOff = OntologySymbol(Symbol("spotCutOff"))
  val spotExponent = OntologySymbol(Symbol("spotExponent"))
  val spotLight = OntologySymbol(Symbol("spotLight"))
  val state_Changed = OntologySymbol(Symbol("state_Changed"))
  val string = OntologySymbol(Symbol("string"))
  val structure = OntologySymbol(Symbol("structure"))
  val subElement = OntologySymbol(Symbol("subElement"))

  val texture = OntologySymbol(Symbol("texture"))
  val thickness = OntologySymbol(Symbol("thickness"))
  val threshold = OntologySymbol(Symbol("threshold"))
  val time = OntologySymbol(Symbol("time"))
  val token = OntologySymbol(Symbol("token"))
  val torqueImpulse = OntologySymbol(Symbol("torqueImpulse"))
  val trackingTarget = OntologySymbol(Symbol("trackingTarget"))
  val trackingTargetId = OntologySymbol(Symbol("trackingTargetId"))
  val transformation = OntologySymbol(Symbol("transformation"))
  val tuio = OntologySymbol(Symbol("tuio"))
  val tuioObjectAdded = OntologySymbol(Symbol("tuioObjectAdded"))
  val tuioObjectUpdated = OntologySymbol(Symbol("tuioObjectUpdated"))
  val tuioObjectRemoved = OntologySymbol(Symbol("tuioObjectRemoved"))

  val uRL = OntologySymbol(Symbol("uRL"))
  val upTexture = OntologySymbol(Symbol("upTexture"))
  val upVector = OntologySymbol(Symbol("upVector"))
  val user = OntologySymbol(Symbol("user"))

  val vector2 = OntologySymbol(Symbol("vector2"))
  val vector3 = OntologySymbol(Symbol("vector3"))
  val vector4 = OntologySymbol(Symbol("vector4"))
  val velocity = OntologySymbol(Symbol("velocity"))
  val vertex = OntologySymbol(Symbol("vertex"))
  val vertexShader = OntologySymbol(Symbol("vertexShader"))
  val viewPlatform = OntologySymbol(Symbol("viewPlatform"))
  val vrpn = OntologySymbol(Symbol("vrpn"))

  val water = OntologySymbol(Symbol("water"))
  val waveScale = OntologySymbol(Symbol("waveScale"))
  val wiiMote = OntologySymbol(Symbol("wiiMote"))
}
