//AutoGenerated Begin
//DO NOT EDIT!
package siris.components.editor.gui

import scala.swing._
import de.bht.jvr.core.Texture2D
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import javax.imageio.ImageIO;

class Texture2DSVarViewGenerator06de9daa4c4e42308ec72e513e8bdfb5 extends SVarViewGenerator[Texture2D] {

  def generate: SVarView[Texture2D] = new SVarView[Texture2D] {

    //AutoGenerated END
    //Put your code below

    /**
     *  The scala.swing.Component that visualizes the value.
     */
    //Todo: Implement yourself!
    val content = new Label()
    val label = new TextArea()
    label.background = null
    val component = new BorderPanel {
      add(content, BorderPanel.Position.Center)
      add(label, BorderPanel.Position.South)
    }

    /**
     *  This function is called whenever the visualized value changes.
     *  It should update component accordingly.
     */
    //Todo: Implement yourself!
    def update(sVarValue: Texture2D) {
      try {
        val imageInByte = sVarValue.getImageData
        if (imageInByte != null) {
          if(imageInByte.length > 0) {
            val in: InputStream = new ByteArrayInputStream(imageInByte);
            val bImageFromConvert: BufferedImage = ImageIO.read(in);

            //val icon = new ImageIcon(bImageFromConvert)


            label.text += "byte array length: "+imageInByte.length+"\n"
            label.text += "image size: "
            label.text += sVarValue.toString;


          } else {
            content.text = "No processable image data"
            label.text = ""
          }

        }

      } catch {
        case e: Exception => "error"
      }

    }

  }

  /**
   *  The name of this visualizer.
   *  This must not be unique.
   */
  //Todo: Name it!
  val name: String = "Texture2D View"

}